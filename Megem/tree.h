#pragma once

typedef struct TREE TREE;

struct TREE {
	TOKEN *token;
	TREE *left, *right;
};

TREE *CreateTree(ARRAY *tokens, unsigned int *index);
TREE *CopyTree(TREE *tree);
void FreeTree(TREE *tree);
void PrintTree(TREE *tree);
void _PrintTree(TREE *tree, wchar_t *prefix, int tail);

static int SYNTAX_TABLE[][20] = {
							  // TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA     TOKEN_CLASS_QUESTION  TOKEN_CLASS_COLON     TOKEN_CLASS_SIGN      TOKEN_CLASS_BINARY    TOKEN_CLASS_UNARY     TOKEN_CLASS_INC_DEC   TOKEN_CLASS_OPAREN    TOKEN_CLASS_CPAREN    TOKEN_CLASS_SEMICOLON TOKEN_CLASS_OBRACKET  TOKEN_CLASS_CBRACKET  TOKEN_CLASS_OBRACE    TOKEN_CLASS_CBRACE    TOKEN_CLASS_KEYWORD   TOKEN_CLASS_WORD      TOKEN_CLASS_NUMBER    TOKEN_CLASS_STRING   TOKEN_CLASS_END
	/* TOKEN_CLASS_INIT      */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_END   },
	/* TOKEN_CLASS_COMMA     */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_QUESTION  */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_COLON     */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_SIGN      */{ TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_OBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_BINARY    */{ TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_OBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_UNARY     */{ TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_OBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_INC_DEC   */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_INIT,     TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_WORD,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_OPAREN    */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_CPAREN    */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_ERROR,    TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_OBRACE,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_SEMICOLON */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACE,   TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_END   },
	/* TOKEN_CLASS_OBRACKET  */{ TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_CBRACKET  */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_ERROR,    TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_OBRACE    */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_ERROR,    TOKEN_CLASS_UNARY,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACE,   TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_CBRACE    */{ TOKEN_CLASS_INIT,	   TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_OPAREN,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACE,   TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_END   },
	/* TOKEN_CLASS_KEYWORD   */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_OBRACKET, TOKEN_CLASS_CBRACKET, TOKEN_CLASS_OBRACE,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_KEYWORD,  TOKEN_CLASS_WORD,     TOKEN_CLASS_NUMBER,   TOKEN_CLASS_STRING,  TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_WORD      */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_OPAREN,   TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_NUMBER    */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_ERROR,    TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR },
	/* TOKEN_CLASS_STRING    */{ TOKEN_CLASS_INIT,     TOKEN_CLASS_COMMA,    TOKEN_CLASS_QUESTION, TOKEN_CLASS_COLON,    TOKEN_CLASS_SIGN,     TOKEN_CLASS_BINARY,   TOKEN_CLASS_ERROR,    TOKEN_CLASS_INC_DEC,  TOKEN_CLASS_ERROR,    TOKEN_CLASS_CPAREN,   TOKEN_CLASS_SEMICOLON,TOKEN_CLASS_ERROR,    TOKEN_CLASS_CBRACKET, TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,    TOKEN_CLASS_ERROR,   TOKEN_CLASS_ERROR }
};

static char TOKEN_PRECEDENCE[] = {
// larger number is higher precedence

	0, // comment

	0, // escape
	0, // :=

	0, // ,
	0, // ?
	0, // :

	6, // ==
	6, // !=
	0, // =

	2, // &&
	0, // &=
	5, // &

	0, // ^=
	4, // ^

	1, // ||
	0, // |=
	3, // |

	14, // ~
	14, // !

	7, // <=
	0, // <<=
	8, // <<
	7, // <

	7, // >=
	0, // >>=
	8, // >>
	7, // >

	15, // ++
	0, // +=
	10, // +

	15, // --
	0, // -=
	9, // -

	0, // *=
	13, // *

	0, // /=
	12, // /

	0, // %=
	11, // %
};